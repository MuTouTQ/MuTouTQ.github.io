<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[JAVA学习之MySQL]]></title>
      <url>http://mutouspace.cn/2017/03/21/JAVA%E5%AD%A6%E4%B9%A0%E4%B9%8BMySQL/</url>
      <content type="html"><![CDATA[<excerpt in="" index="" |="" 首页摘要="">

<blockquote>
<p>本文主要记录MySQL数据库的简单使用。<br>未完待续。。。。。</p>
<p>转载请注明：转载于Terry Tian的博客（<a href="www.mutouspace.cn">www.mutouspace.cn</a>）!</p>
</blockquote>
<a id="more"></a> 
<the rest="" of="" contents="" |="" 余下全文="">

<h1 id="数据库概述"><a href="#数据库概述" class="headerlink" title="数据库概述"></a>数据库概述</h1><p><strong>数据库（DataBase，DB）：</strong>指长期保存在计算机的存储设备上，按照一定规则组织起来，可以被各种用户或应用共享的数据集合。(文件系统)</p>
<p><strong>数据库管理系统（DataBase Management System，DBMS）：</strong>指一种操作和管理数据库的大型软件，用于建立、使用和维护数据库，对数据库进行统一管理和控制，以保证数据库的安全性和完整性。用户通过数据库管理系统访问数据库中的数据。</p>
<p><em>数据库软件应该为数据库管理系统，数据库是通过数据库管理系统创建和操作的。</em></p>
<blockquote>
<p>数据库：存储、维护和管理数据的集合。</p>
</blockquote>
<h1 id="数据库的安装与配置"><a href="#数据库的安装与配置" class="headerlink" title="数据库的安装与配置"></a>数据库的安装与配置</h1><h2 id="安装与配置"><a href="#安装与配置" class="headerlink" title="安装与配置"></a>安装与配置</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/%E5%9B%BE%E7%89%871.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/%E5%9B%BE%E7%89%872.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/%E5%9B%BE%E7%89%873.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/%E5%9B%BE%E7%89%874.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/%E5%9B%BE%E7%89%875.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/%E5%9B%BE%E7%89%876.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/%E5%9B%BE%E7%89%877.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/%E5%9B%BE%E7%89%878.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/%E5%9B%BE%E7%89%879.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/%E5%9B%BE%E7%89%8710.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/%E5%9B%BE%E7%89%8711.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/%E5%9B%BE%E7%89%8712.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/%E5%9B%BE%E7%89%8713.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/%E5%9B%BE%E7%89%8714.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/%E5%9B%BE%E7%89%8715.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/%E5%9B%BE%E7%89%8716.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/%E5%9B%BE%E7%89%8717.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/%E5%9B%BE%E7%89%8718.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/%E5%9B%BE%E7%89%8719.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/%E5%9B%BE%E7%89%8720.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/%E5%9B%BE%E7%89%8721.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/%E5%9B%BE%E7%89%8722.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<h2 id="卸载与修改密码"><a href="#卸载与修改密码" class="headerlink" title="卸载与修改密码"></a>卸载与修改密码</h2><p><strong>卸载：</strong></p>
<ol>
<li><p>停止mysql服务   net stop mysql       启动mysql服务  net start mysql</p>
</li>
<li><p>卸载mysql</p>
</li>
<li><p>找到mysql 安装目录下的 my.ini   datadir=”C:/ProgramData/MySQL/MySQL Server 5.5/Data/“</p>
</li>
</ol>
<p><strong>修改密码</strong></p>
<p>运行cmd</p>
<p> 安装成功了打开cmd  –&gt; mysql -uroot -p你的密码</p>
<p> 修改mysql root用户密码</p>
<p>1) 停止mysql服务 运行输入services.msc 停止mysql服务</p>
<pre><code>或者 cmd --&gt;  net stop mysql
</code></pre><p>2) 在cmd下 输入 mysqld –skip-grant-tables 启动服务器 光标不动 （不要关闭该窗口）</p>
<p>3) 新打开cmd 输入mysql -u root -p 不需要密码 </p>
<pre><code>use mysql;

update user set password=password(&apos;abc&apos;) WHERE User=&apos;root&apos;;
</code></pre><p>4) 关闭两个cmd窗口 在任务管理器结束mysqld 进程 </p>
<p>5) 在服务管理页面 重启mysql 服务</p>
<p>密码修改完成</p>
<h1 id="sql概述"><a href="#sql概述" class="headerlink" title="sql概述"></a>sql概述</h1><blockquote>
<p>SQL：Structure Query Language。（结构化查询语言）</p>
</blockquote>
<h1 id="Sql的分类"><a href="#Sql的分类" class="headerlink" title="Sql的分类"></a>Sql的分类</h1><p><strong>DDL（Data Definition Language）：</strong>数据定义语言，用来定义数据库对象：库、表、列等；     CREATE、 ALTER、DROP</p>
<p><strong>DML（Data Manipulation Language）：</strong>数据操作语言，用来定义数据库记录（数据）；        INSERT、 UPDATE、 DELETE</p>
<p><strong>DCL（Data Control Language）：</strong>数据控制语言，用来定义访问权限和安全级别；</p>
<p><strong>DQL（Data Query Language）：</strong>数据查询语言，用来查询记录（数据）。SELECT</p>
<p><strong>注意：sql语句以;结尾</strong></p>
<h2 id="DDL-操作数据库、表、列等"><a href="#DDL-操作数据库、表、列等" class="headerlink" title="DDL:操作数据库、表、列等"></a>DDL:操作数据库、表、列等</h2><blockquote>
<p>使用的关键字：CREATE、 ALTER、 DROP</p>
</blockquote>
<p><strong>example:</strong></p>
<pre><code>CREATE TABLE emp (
id INT,
NAME VARCHAR(50),
gender VARCHAR(10),
birthday DATE,
entry_date DATE,
job VARCHAR(100),
salary DOUBLE,
RESUME VARCHAR(200)
);
-- 查看表的字段信息
DESC emp;
-- 在emp TABLE中添加image列
ALTER TABLE emp ADD image BLOB;
-- 修改job列，使其长度为60。
ALTER TABLE emp MODIFY job VARCHAR(60);
-- 删除image列,一次只能删一列。
ALTER TABLE emp DROP image;
-- 表名改为USER。
RENAME TABLE emp TO USER;
-- 查看表格的创建细节
SHOW CREATE TABLE USER;
-- 修改表的字符集为gbk
ALTER TABLE USER CHARACTER SET gbk;
-- 列名NAME修改为username
ALTER TABLE USER CHANGE NAME username VARCHAR(100);

DESC USER;
-- 删除表
DROP TABLE USER ;
</code></pre><h2 id="DML操作-重要"><a href="#DML操作-重要" class="headerlink" title="DML操作(重要)"></a>DML操作(重要)</h2><h3 id="插入操作：INSERT"><a href="#插入操作：INSERT" class="headerlink" title="插入操作：INSERT"></a>插入操作：INSERT</h3><p><strong>语法：</strong> INSERT INTO 表名（列名1，列名2 …）VALUES(列值1，列值2…);<br><strong>注意：</strong>列名与列值的类型、个数、顺序要一一对应。</p>
<p>可以把列名当做java中的形参，把列值当做实参。</p>
<p>值不要超出列定义的长度。</p>
<p>如果插入空值，请使用null</p>
<p>插入的日期和字符一样，都使用引号括起来。</p>
<p><strong>练习 ：</strong></p>
<pre><code>create table emp(
id int,
name varchar(100),
gender varchar(10),
birthday date,
salary float(10,2),
entry_date date,
resume text
);

INSERT INTO emp(id,name,gender,birthday,salary,entry_date,resume)
VALUES(1,&apos;zhangsan&apos;,&apos;female&apos;,&apos;1990-5-10&apos;,10000,&apos;2015-5-5-&apos;,&apos;good girl&apos;);

INSERT INTO emp(id,name,gender,birthday,salary,entry_date,resume)
VALUES(2,&apos;lisi&apos;,&apos;male&apos;,&apos;1995-5-10&apos;,10000,&apos;2015-5-5&apos;,&apos;good boy&apos;);

INSERT INTO emp(id,name,gender,birthday,salary,entry_date,resume)
VALUES(3,&apos;wangwu&apos;,&apos;male&apos;,&apos;1995-5-10&apos;,10000,&apos;2015-5-5&apos;,&apos;good boy&apos;);

-- 批量插入：
INSERT INTO emp VALUES
(4,&apos;zs&apos;,&apos;m&apos;,&apos;2015-09-01&apos;,10000,&apos;2015-09-01&apos;,NULL),
(5,&apos;li&apos;,&apos;m&apos;,&apos;2015-09-01&apos;,10000,&apos;2015-09-01&apos;,NULL),
(6,&apos;ww&apos;,&apos;m&apos;,&apos;2015-09-01&apos;,10000,&apos;2015-09-01&apos;,NULL);
</code></pre><h3 id="修改操作-UPDATE"><a href="#修改操作-UPDATE" class="headerlink" title="修改操作 UPDATE"></a>修改操作 UPDATE</h3><p><strong>语法：</strong>UPDATE 表名 SET 列名1=列值1，列名2=列值2 。。。 WHERE 列名=值</p>
<p><strong>练习 ：</strong></p>
<pre><code>-- 将所有员工薪水修改为5000元。
UPDATE emp SET salary=5000 
-- 将姓名为’tom’的员工薪水修改为3000元。
UPDATE emp SET salary=3000 WHERE NAME=&apos;tom&apos;;
-- 将姓名为’jerry’的员工薪水修改为4000元,gender改为female。
 UPDATE emp SET salary=4000,gender=&apos;female&apos; WHERE NAME=&apos;jerry&apos;;
-- 将蔡依林的薪水在原有基础上增加1000元。
 UPDATE emp SET salary=salary+1000 WHERE NAME = &apos;蔡依林&apos;;
</code></pre><h3 id="删除操作-DELETE"><a href="#删除操作-DELETE" class="headerlink" title="删除操作 DELETE"></a>删除操作 DELETE</h3><p><strong>语法 ：</strong> DELETE FROM 表名 【WHERE 列名=值】</p>
<p><strong>练习 ：</strong></p>
<pre><code>-- 删除表中名称为’zs’的记录。
DELETE FROM emp WHERE NAME=‘tom’;
-- 删除表中所有记录。
DELETE FROM emp;
-- 使用truncate删除表中记录。
TRUNCATE TABLE emp;
</code></pre><blockquote>
<p>DELETE 删除表中的数据，表结构还在;删除后的数据可以找回<br> TRUNCATE 删除是把表直接DROP掉，然后再创建一个同样的新表。<br> 删除的数据不能找回。执行速度比DELETE快。</p>
</blockquote>
<h2 id="DQL操作"><a href="#DQL操作" class="headerlink" title="DQL操作"></a>DQL操作</h2><blockquote>
<p>DQL数据查询语言 （重要）<br>数据库执行DQL语句不会对数据进行改变，而是让数据库发送结果集给客户端。<br>查询返回的结果集是一张虚拟表。</p>
</blockquote>
<p><strong>查询关键字：</strong>SELECT<br><strong>语法：</strong> SELECT 列名 FROM表名<br>【WHERE –&gt; GROUP BY –&gt;HAVING–&gt; ORDER BY】</p>
<p><strong>语法：</strong></p>
<pre><code>SELECT selection_list /*要查询的列名称*/
FROM table_list /*要查询的表名称*/
WHERE condition /*行条件*/
GROUP BY grouping_columns /*对结果分组*/
HAVING condition /*分组后的行条件*/
ORDER BY sorting_columns /*对结果分组*/
LIMIT offset_start, row_count /*结果限定*/
</code></pre></the></excerpt>]]></content>
      
        <categories>
            
            <category> 数据库 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JAVA </tag>
            
            <tag> MySQL </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Git学习笔记系列]]></title>
      <url>http://mutouspace.cn/2017/03/09/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E7%B3%BB%E5%88%97/</url>
      <content type="html"><![CDATA[<excerpt in="" index="" |="" 首页摘要="">

<h1 id="Git简介"><a href="#Git简介" class="headerlink" title="Git简介"></a>Git简介</h1><h2 id="Git是什么？"><a href="#Git是什么？" class="headerlink" title="Git是什么？"></a>Git是什么？</h2><p>Git是目前世界上最先进的分布式版本控制系统（没有之一）。</p>
<p>Git有什么特点？简单来说就是：高端大气上档次！</p>
<a id="more"></a> 
<the rest="" of="" contents="" |="" 余下全文="">

<p>那什么是版本控制系统？</p>
<p>如果你用Microsoft Word写过长篇大论，那你一定有这样的经历：</p>
<p>想删除一个段落，又怕将来想恢复找不回来怎么办？有办法，先把当前文件“另存为……”一个新的Word文件，再接着改，改到一定程度，再“另存为……”一个新文件，这样一直改下去，最后你的Word文档变成了这样：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://i.imgur.com/mMlEWSp.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>过了一周，你想找回被删除的文字，但是已经记不清删除前保存在哪个文件里了，只好一个一个文件去找，真麻烦。</p>
<p>看着一堆乱七八糟的文件，想保留最新的一个，然后把其他的删掉，又怕哪天会用上，还不敢删，真郁闷。</p>
<p>更要命的是，有些部分需要你的财务同事帮助填写，于是你把文件Copy到U盘里给她（也可能通过Email发送一份给她），然后，你继续修改Word文件。一天后，同事再把Word文件传给你，此时，你必须想想，发给她之后到你收到她的文件期间，你作了哪些改动，得把你的改动和她的部分合并，真困难。</p>
<p>于是你想，如果有一个软件，不但能自动帮我记录每次文件的改动，还可以让同事协作编辑，这样就不用自己管理一堆类似的文件了，也不需要把文件传来传去。如果想查看某次改动，只需要在软件里瞄一眼就可以，岂不是很方便？</p>
<p>这个软件用起来就应该像这个样子，能记录每次文件的改动：</p>
<table><br>    <tr><br>     <th>版本</th><br>     <th>用户</th><br>     <th>说明</th><br>     <th>日期</th><br>    </tr><br>    <tr><br>     <th>1</th><br>     <th>张三</th><br>     <th> 删除了软件服务条款5</th><br>     <th>7/12 10:38</th><br>    </tr><br>    <tr><br>     <th>2</th><br>     <th>张三</th><br>     <th>增加了License人数限制</th><br>     <th>7/12 18:09</th><br>    </tr><br>    <tr><br>     <th>3</th><br>     <th>李四</th><br>     <th>财务部门调整了合同金额</th><br>     <th>7/13 9:51</th><br>    </tr><br>    <tr><br>     <th>4</th><br>     <th>张三</th><br>     <th>延长了免费升级周期</th><br>     <th>7/14 15:17</th><br>    </tr><br><br></table>


<p>这样，你就结束了手动管理多个“版本”的史前时代，进入到版本控制的20世纪。</p>
<p>参考廖雪峰的网站：<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001373962845513aefd77a99f4145f0a2c7a7ca057e7570000" target="_blank" rel="external">http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001373962845513aefd77a99f4145f0a2c7a7ca057e7570000</a></p>
<h1 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h1><p>要使用Git，第一步当然是安装Git了。由于笔者使用的windows系统，所以此处只介绍在Windows环境下如何安装Git。</p>
<p>在Windows上安装Git</p>
<p>想要在Windows下安装Git，首先要下载Git安装包，用户可以从<a href="https://git-scm.com/download/" target="_blank" rel="external">https://git-scm.com/download/</a>下载，然后按默认选项安装即可。</p>
<p>安装完成后，在开始菜单里找到<code>“Git”-&gt;“Git Bash”</code>，蹦出一个类似命令行窗口的东西，就说明Git安装成功！</p>
<p>安装完成后，还需要最后一步设置，在命令行输入：</p>
<pre><code>$ git config - -global user.name &quot;Your Name&quot;

$ git config - -global user.email &quot;email@example.com&quot;
</code></pre><p>因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。你也许会担心，如果有人故意冒充别人怎么办？这个不必担心，首先我们相信大家都是善良无知的群众，其次，真的有冒充的也是有办法可查的。</p>
<p><strong>注意:</strong></p>
<p>   <em>git config命令的–global参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。</em></p>
<h1 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h1><p>什么是版本库呢？</p>
<p>版本库又名仓库，英文名repository，你可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。</p>
<p>所以，创建一个版本库非常简单，首先，选择一个合适的地方，创建一个空目录：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://i.imgur.com/pAAV2BI.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<pre><code>$ mkdir tq1

$ cd tq1
</code></pre><p><strong>注意：</strong>Windows系统，为了避免遇到各种莫名其妙的问题，请确保目录名（包括父目录）不包含中文。</p>
<p>第二步，通过git init命令把这个目录变成Git可以管理的仓库：</p>
<pre><code>$ git init
Initialized empty Git repository in F：/AndroidProject2/tq1/.git/
</code></pre><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://i.imgur.com/z9iyBEd.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>瞬间Git就把仓库建好了，而且告诉你是一个空的仓库（empty Git repository），细心的读者可以发现当前目录下多了一个.git的目录，这个目录是Git来跟踪管理版本库的，没事千万不要手动修改这个目录里面的文件，不然改乱了，就把Git仓库给破坏了。</p>
<p>把文件添加到版本库</p>
<p>现在我们编写一个readme.txt文件，内容如下：</p>
<pre><code>Git is a version control system.
Git is free software.
</code></pre><p>一定要放到tq1目录下（子目录也行），因为这是一个Git仓库，放到其他地方Git再厉害也找不到这个文件。</p>
<p>第一步，用命令git add告诉Git，把文件添加到仓库：</p>
<pre><code>$ git add readme.txt
</code></pre><p>执行上面的命令，没有任何显示，这就对了，Unix的哲学是“没有消息就是好消息”，说明添加成功。</p>
<p>第二步，用命令git commit告诉Git，把文件提交到仓库：</p>
<pre><code>$ git commit -m &quot;wrote a readme file&quot;
[master (root-commit) cb926e7] wrote a readme file
 1 file changed, 2 insertions(+)
 create mode 100644 readme.txt
</code></pre><p>简单解释一下git commit命令，-m后面输入的是本次提交的说明，可以输入任意内容，当然最好是有意义的，这样你就能从历史记录里方便地找到改动记录。</p>
<p>嫌麻烦不想输入-m “xxx”行不行？确实有办法可以这么干，但是强烈不建议你这么干，因为输入说明对自己对别人阅读都很重要。实在不想输入说明的童鞋请自行Google，我不告诉你这个参数。</p>
<p>git commit命令执行成功后会告诉你，1个文件被改动（我们新添加的readme.txt文件），插入了两行内容（readme.txt有两行内容）。</p>
<p>为什么Git添加文件需要add，commit一共两步呢？因为commit可以一次提交很多文件，所以你可以多次add不同的文件，比如：</p>
<pre><code>$ git add file1.txt
$ git add file2.txt file3.txt
$ git commit -m &quot;add 3 files.&quot;
</code></pre><p><strong>小结</strong></p>
<p>现在总结一下今天学的两点内容：</p>
<p>初始化一个Git仓库，使用git init命令。</p>
<p>添加文件到Git仓库，分两步：</p>
<ul>
<li><p>第一步，使用命令git add <file>，注意，可反复多次使用，添加多个文件；</file></p>
</li>
<li><p>第二步，使用命令git commit，完成。</p>
</li>
</ul>
<h1 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h1><p>到目前为止，我们已经掌握了如何在Git仓库里对一个文件进行时光穿梭，你再也不用担心文件备份或者丢失的问题了。</p>
<p>可是有用过集中式版本控制系统SVN的童鞋会站出来说，这些功能在SVN里早就有了，没看出Git有什么特别的地方。</p>
<p>没错，如果只是在一个仓库里管理文件历史，Git和SVN真没啥区别。为了保证你现在所学的Git物超所值，将来绝对不会后悔，同时为了打击已经不幸学了SVN的童鞋，本章开始介绍Git的杀手级功能之一（注意是之一，也就是后面还有之二，之三……）：远程仓库。</p>
<p>Git是分布式版本控制系统，同一个Git仓库，可以分布到不同的机器上。怎么分布呢？最早，肯定只有一台机器有一个原始版本库，此后，别的机器可以“克隆”这个原始版本库，而且每台机器的版本库其实都是一样的，并没有主次之分。</p>
<p>你肯定会想，至少需要两台机器才能玩远程库不是？但是我只有一台电脑，怎么玩？</p>
<p>其实一台电脑上也是可以克隆多个版本库的，只要不在同一个目录下。不过，现实生活中是不会有人这么傻的在一台电脑上搞几个远程库玩，因为一台电脑上搞几个远程库完全没有意义，而且硬盘挂了会导致所有库都挂掉，所以我也不告诉你在一台电脑上怎么克隆多个仓库。</p>
<p>实际情况往往是这样，找一台电脑充当服务器的角色，每天24小时开机，其他每个人都从这个“服务器”仓库克隆一份到自己的电脑上，并且各自把各自的提交推送到服务器仓库里，也从服务器仓库中拉取别人的提交。</p>
<p>完全可以自己搭建一台运行Git的服务器，不过现阶段，为了学Git先搭个服务器绝对是小题大作。好在这个世界上有个叫Coding的神奇的网站，这个网站就是提供Git仓库托管服务的，所以，只要注册一个Coding账号，就可以免费获得Git远程仓库。</p>
<p>在继续阅读后续内容前，请自行注册Coding账号。由于你的本地Git仓库和Coding仓库之间的传输是通过SSH加密的，所以，需要一点设置：</p>
<p>第1步：创建SSH Key。在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有<em>id_rsa</em>和<code>id_rsa.pub</code>这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：</p>
<pre><code>$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot;
</code></pre><p>你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。</p>
<p>如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。</p>
<p>第2步：登陆Coding，打开“设置”，“部署公钥”页面：</p>
<p>然后，点“新建部署公钥”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://i.imgur.com/pCnS7jM.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>点“添加”，你就应该看到已经添加的Key：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://i.imgur.com/F72JWoO.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>为什么Coding需要SSH Key呢？因为Coding需要识别出你推送的提交确实是你推送的，而不是别人冒充的，而Git支持SSH协议，所以，Coding只要知道了你的公钥，就可以确认只有你自己才能推送。</p>
<p>当然，Coding允许你添加多个Key。假定你有若干电脑，你一会儿在公司提交，一会儿在家里提交，只要把每台电脑的Key都添加到Conding，就可以在每台电脑上往Coding推送了。</p>
<p>最后友情提示，在GitHub上免费托管的Git仓库，任何人都可以看到喔（但只有你自己才能改）。所以，不要把敏感信息放进去。</p>
<p>如果你不想让别人看到Git库，有两个办法，一个是交点保护费，让GitHub把公开的仓库变成私有的，这样别人就看不见了（不可读更不可写）。另一个办法是自己动手，搭一个Git服务器，因为是你自己的Git服务器，所以别人也是看不见的。这个方法我们后面会讲到的，相当简单，公司内部开发必备。</p>
<p>确保你拥有一个Coding账号后，我们就即将开始远程仓库的学习。</p>
<h1 id="添加远程库"><a href="#添加远程库" class="headerlink" title="添加远程库"></a>添加远程库</h1><p>现在的情景是，你已经在本地创建了一个Git仓库后，又想在Coding创建一个Git仓库，并且让这两个仓库进行远程同步，这样，Coding上的仓库既可以作为备份，又可以让其他人通过该仓库来协作，真是一举多得。</p>
<p>首先，登陆Coding，然后，在右上角的“+”找到“项目”按钮，创建一个新的仓库：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://i.imgur.com/rGh1dMG.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>在 <strong>项目名称</strong> 填入<em>tq1</em>，其他保持默认设置，点击“创建项目”按钮，就成功地创建了一个新的Git仓库，目前，在Coding的这个<em>tq1</em>仓库还是空的，点击左侧“代码”选项：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://i.imgur.com/jyKEHdy.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>Coding告诉我们，可以从这个仓库克隆出新的仓库，也可以把一个已有的本地仓库与之关联，然后，把本地仓库的内容推送到Coding仓库。</p>
<p>现在，我们根据Coding的提示，在本地的<em>tq1</em>仓库下运行命令：</p>
<pre><code>git remote add origin git@git.coding.net:Mu_TQ/tq1.git
</code></pre><p>请千万注意，把上面的Mu_TQ替换成你自己的Coding账户名，否则，你在本地关联的就是我的远程库，关联没有问题，但是你以后推送是推不上去的，因为你的SSH<br> Key公钥不在我的账户列表中。</p>
<p>添加后，远程库的名字就是origin，这是Git默认的叫法，也可以改成别的，但是origin这个名字一看就知道是远程库。</p>
<p>下一步，就可以把本地库的所有内容推送到远程库上：</p>
<pre><code>$ git push -u origin master
Counting objects: 19, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (19/19), done.
Writing objects: 100% (19/19), 13.73 KiB, done.
Total 23 (delta 6), reused 0 (delta 0)
To git@github.com:michaelliao/learngit.git
 * [new branch]  master -&gt; master
Branch master set up to track remote branch master from origin.
</code></pre><p>把本地库的内容推送到远程，用git push命令，实际上是把当前分支<code>master</code>推送到远程。</p>
<p>由于远程库是空的，我们第一次推送<code>master</code>分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。</p>
<p>推送成功后，可以立刻在GitHub页面中看到远程库的内容已经和本地一模一样：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://i.imgur.com/jkPoobd.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>从现在起，只要本地作了提交，就可以通过命令：</p>
<pre><code>$ git push origin master
</code></pre><p>把本地master分支的最新修改推送至Coding，现在，你就拥有了真正的分布式版本库！</p>
<p><strong>SSH警告</strong></p>
<p>当你第一次使用Git的clone或者push命令连接GitHub时，会得到一个警告：</p>
<pre><code>The authenticity of host &apos;github.com (xx.xx.xx.xx)&apos; can&apos;t be established.
RSA key fingerprint is xx.xx.xx.xx.xx.
Are you sure you want to continue connecting (yes/no)?
</code></pre><p>这是因为Git使用SSH连接，而SSH连接在第一次验证GitHub服务器的Key时，需要你确认GitHub的Key的指纹信息是否真的来自GitHub的服务器，输入yes回车即可。</p>
<p>Git会输出一个警告，告诉你已经把GitHub的Key添加到本机的一个信任列表里了：</p>
<pre><code>Warning: Permanently added &apos;github.com&apos; (RSA) to the list of known hosts.
</code></pre><p>这个警告只会出现一次，后面的操作就不会有任何警告了。</p>
<p>如果你实在担心有人冒充GitHub服务器，输入yes前可以对照GitHub的RSA<br> Key的指纹信息是否与SSH连接给出的一致。</p>
<p><strong>小结</strong></p>
<p>要关联一个远程库，使用命令<code>git remote add origin git@server-name:path/repo-name.git</code>；</p>
<p>关联后，使用命令<code>git push -u origin master</code>第一次推送master分支的所有内容；</p>
<p>此后，每次本地提交后，只要有必要，就可以使用命令<code>git push origin master</code>推送最新修改；</p>
<p>分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！当有网络的时候，再把本地提交推送一下就完成了同步，真是太方便了！</p>
</the></excerpt>]]></content>
      
        <categories>
            
            <category> 教程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[软件分享篇（Windows10）]]></title>
      <url>http://mutouspace.cn/2017/03/06/%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB%E7%AF%87/</url>
      <content type="html"><![CDATA[<excerpt in="" index="" |="" 首页摘要="">

<blockquote>
<p>今晚有点晚了，就不撸代码了，决定把我电脑里常用的软件、工具分享给大家，这些软件真的很好用，不信你可以试一试！</p>
</blockquote>
<p>转载请注明：转载于Terry Tian的博客（<a href="www.mutouspace.cn">www.mutouspace.cn</a>）!</p>
<a id="more"></a> 
<the rest="" of="" contents="" |="" 余下全文="">

<h1 id="安全杀毒："><a href="#安全杀毒：" class="headerlink" title="安全杀毒："></a>安全杀毒：</h1><p>   TT电脑里用的杀毒防护软件是Windows系统自带的<strong>Windows Defender</strong>，说实话，现在Windows自带的杀软已经很好了，具体好到哪，大家可以自行百度、google。软件界面简单、实用，还没有广告，界面如下：</p>
<p>   <img src="http://olg3gwtbm.bkt.clouddn.com/Windowsdefender.PNG" alt="软件截图"></p>
<p>   清理软件我用的是口碑很好的 <a href="http://www.piriform.com/ccleaner" target="_blank" rel="external">CCleaner</a>,功能完全足够你使用了！截图如下：</p>
<p>   <img src="http://olg3gwtbm.bkt.clouddn.com/cc.PNG" alt="CC"></p>
<p>   对于非一般的用户，特别是计算机专业的学生，真的不是很建议在电脑了安装些安全卫士、管家、毒霸等软件的！</p>
<h1 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h1><p>  <strong>Android Studio</strong>：对于这款软件大家一定都不陌生，特别是对于一位安卓开发人员，Google的亲儿子，好好享受吧！</p>
<p>  <strong>eclipse</strong>：一款插件丰富的开发工具，java开发者用的挺多，以前也用于开发安卓，可惜Google生了个儿子。</p>
<p>  <strong>SQLite Expert Personal</strong>：一款可以查看数据表中数据的软件，安卓开发人员都值得拥有！</p>
<h1 id="系统工具"><a href="#系统工具" class="headerlink" title="系统工具"></a>系统工具</h1><p>  <strong>chrome：</strong>好用的不能再好用的浏览器。插件丰富，但需要科学上网。<br>             缺点就是在国内没法云备份自己的收藏夹。推荐大家可以在安装一款360极速浏览器、或者QQ浏览器来备份自己的收藏夹。</p>
<p>  <strong>MarkdownPad 2：</strong>我认为这可能是Windows系统下最好用的markdown书写软件了，可以去<a href="http://markdownpad.com/" target="_blank" rel="external">官网</a>下载。</p>
<p>   <img src="http://olg3gwtbm.bkt.clouddn.com/md.PNG" alt=""></p>
<p>  <strong>Seer</strong>:是一款 Windows 下的文件预览工具，可以无需打开图片、音乐、视频、压缩包等文件就能预览到内容，只需点一下空格。<a href="http://www.appinn.com/seer-windows/" target="_blank" rel="external">下载地址：http://www.appinn.com/seer-windows/</a>。</p>
<p>  <strong>护眼宝：</strong>是一款护眼的工具，<a href="http://www.huyanbao.com/#top" target="_blank" rel="external">下载地址：http://www.huyanbao.com/#top</a>。</p>
<p>  <img src="http://olg3gwtbm.bkt.clouddn.com/hyb.PNG" alt=""></p>
<p>  <strong>Clover:</strong><a href="http://cn.ejie.me/" target="_blank" rel="external">Clover</a> 是 Windows Explorer 资源管理器的一个扩展，为其增加类似谷歌 Chrome 浏览器的多标签页功能。</p>
<p>  <img src="http://olg3gwtbm.bkt.clouddn.com/clover.jpg" alt=""></p>
<p>  <strong>ADSafe：</strong><a href="http://www.newadblock.com/" target="_blank" rel="external">ADSafe</a>是一款好用的广告屏蔽软件！</p>
<p>  <strong>HoneyView:</strong><a href="https://www.bandisoft.com/honeyview/cn/" target="_blank" rel="external">HoneyView</a>是一个支持多种格式的极速图像浏览器。<br>  她同时支持不解压浏览ZIP、RAR和7z压缩包中的图片。<br>  她可以显示图片的GPS信息并在Google Maps中查看该地点，同时用户可以储存喜爱的照片。</p>
<p><strong>影音工具</strong></p>
<p>  <strong>网易云音乐（UWP）：</strong>逼格漫漫的音乐播放器。</p>
<p>  <strong>Potplayer：</strong><a href="http://potplayer.daum.net/?lang=zh_CN" target="_blank" rel="external">PotPlayer</a>诚意满满的视频播放器。</p>
<p>  <img src="http://olg3gwtbm.bkt.clouddn.com/potp.PNG" alt=""></p>
<h1 id="下载工具"><a href="#下载工具" class="headerlink" title="下载工具"></a>下载工具</h1><p>  <strong>IDM：</strong>Internet Download Manager(简称“IDM”)是国外的一款下载工具，提升你的下载速度最多达5倍，安排下载时程，或续传一半的软件。Internet Download Manager的续传功能可以恢复因为断线、网络问题、计算机当机甚至无预警的停电导致下传到一半的软件。</p>
<p>  <img src="http://olg3gwtbm.bkt.clouddn.com/idm.PNG" alt=""></p>
<p>  <strong>EagleGet:</strong><a href="http://www.eagleget.com/" target="_blank" rel="external">EagleGet</a>（亦称 EG Download Accelerator）是一个用于 Windows 系统的下载管理器，它是免费软件。EagleGet 使用多线程技术，支持从Youtube、Dailymotion、Facebook、Vimeo等视频网站下载 MP4 和 FLV 格式视频。EagleGet 是一个拥有简洁界面和功能的免费的新下载管理器。</p>
<p>  <img src="http://olg3gwtbm.bkt.clouddn.com/eg.PNG" alt=""></p>
<p>  <strong>迅雷：</strong>国内用户电脑中常备的下载软件，大多数网站也都支持迅雷下载。但我真的越来越讨厌迅雷了，不仅下载速度限速，界面也越来越复杂，广告还多，越来越丧失了一款下载软件的本心。</p>
<p>  <strong><em>分享到这里就结束了，如果大家有什么疑问可以留言，有好的软件推荐给我，也可以留言，谢谢阅读！</em></strong></p>
</the></excerpt>]]></content>
      
        <categories>
            
            <category> 分享 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 分享 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[胡歌为什么会有今天的高度？]]></title>
      <url>http://mutouspace.cn/2017/02/19/%E8%83%A1%E6%AD%8C%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E6%9C%89%E4%BB%8A%E5%A4%A9%E7%9A%84%E9%AB%98%E5%BA%A6%EF%BC%9F/</url>
      <content type="html"><![CDATA[<style type="text/css">
    strong a {
        color: #747474;
    }
    .player {
        text-align: center;
        margin: .5em auto 0;
        width: 100%;
        max-width: 22em;
    }
    .player br {
        display: none;
    }
    .sign {
        text-align: right;
        font-style: italic;
    }
    #ds-recent-visitors {
        margin: 0;
        padding: 0;
    }
    #ds-recent-visitors div img {
        display: inline-block !important;
        width: 56px !important;
        height: 56px !important;
        border-radius: 50%;
        border: 1px solid #ddd;
        padding: 2px;
        box-shadow: 1px 1px 1px rgba(0,0,0, .15);
    }
    .article-entry img:first-child {
        display: block;
    }
    .article-entry span {
        font-family: Arial;
    }
    #ds-hot-posts {
        display: none;
    }
</style>

<excerpt in="" index="" |="" 首页摘要="">

<p><strong>本文转载于微信公众号：小林分享</strong></p>
<p><strong>藏书如山积，读书如水流。山形有限度，水流无时休。</strong></p>
<p class="sign"><span>——</span> Terry_Tian, 2017年2月19日</p>

<p>在娱乐圈里，想通过大荧幕红透半边天的人有很多。</p>
<p>但能够沉下心，通过学习和阅读来提升自己的不多。</p>
<p><strong>胡歌</strong>算一个。</p>
<a id="more"></a> 
<the rest="" of="" contents="" |="" 余下全文="">

<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/hg1.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>去读书，是他多年想做而不得做的事。</p>
<p>时光悄然流逝，从曾经的少年心性，到如今的睿智成熟。</p>
<p>胡歌唯一没变的，就是对学习的向往。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/hg2.webp.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>甚至决定为了深造的事宜，暂时息影两年。</p>
<p>其实，这个决定早就有端倪，春晚结束后有媒体采访胡歌，他说：“2017年将作为自己的学习阶段，继续深造。”</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/hg3.webp.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>果然，不久之后，就有人在美国大使馆相逢正在办理签证的胡歌，也有人在机场拍下这张照片。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/hg4.webp.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>手里抱着书，翘着二郎腿，身旁时贴满行李条的行李箱和背包，内心却是“独钓寒江雪”的怡然自得。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/hg5.webp.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>2005年，胡歌因为成功塑造了电视剧《仙剑奇侠传》中豪爽深情的“李逍遥”一角而成名，迅速跻身“四大小生”头列，广告签约不断，无数粉丝热捧。</p>
<p>原本蓄力满满，却一瞬跌入谷底。</p>
<p>2006年，胡歌和助理乘坐的汽车突然和另一货车发生碰撞，助理当场死亡，胡歌也遭遇重创。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/hg6.webp.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>那段时间，是胡歌有记忆的人生里最痛苦的岁月。</p>
<p>为了让自己振作起来，胡歌开始大量的阅读，写专栏。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/hg7.webp.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/hg9.webp.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>在这篇题为《照镜子》的专栏中，胡歌写：</p>
<blockquote>
<p>车祸创伤了我的容貌，也冲击了我的内心。</p>
<p>每次当我战战兢兢拿起镜子的时候，我都渴望能在镜子里寻找到勇气和力量。</p>
<p>镜子的语言简洁而充满了智能，除了我自己，没有人能够让我真正重新站立。</p>
<p>如果皮囊难以修复，就用思想去填满它吧。</p>
</blockquote>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/hg11.webp.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>嗯，用思想慢慢填充皮囊。</p>
<p>他开始摄影、参与公益，等待伤口被修复，也等待被击垮的自信重新建立起来。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/hg12.webp.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>丢了少年容颜，拾得一个更广阔的世界，在书里，安心的当自己的主演。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/hg13.webp.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>2007年6月22日，胡歌宣布复出。</p>
<p>重回大众视线的胡歌，与车祸之前相比，脸上多了几许忧郁。</p>
<p>为了遮盖自己右眼的伤疤，他全程带着黑框眼镜。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/hg14.webp.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>在拍仙三的时候，也用头发遮住自己手上的眼骨，可眼神里却是历经爱恨生死之后的沧桑。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/hg15.webp.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>从那之后，他旅行、阅读、修复容貌……</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/hg17.webp.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>2015年，带着饱满思想回归的胡歌，强势推出了《琅琊榜》和《伪装者》两部作品，重新回归大众视野。</p>
<p>也被很多人调侃说，二红。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/hg18.webp.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/hg19.webp.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>彼时，他深陷磨难，几度忧伤和消沉。</p>
<p>此时，他褪去青涩，愈加真实和沉稳。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/hg20.webp.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/hg21.webp.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>如今，胡歌是娱乐圈公认的高情商，阅读塑造了他严密的思维逻辑，也让他在浮躁复杂的娱乐圈里，游走自如。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/hg23.webp.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/hg24.webp.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>2016年白玉兰颁奖典礼上，胡歌成为该奖项的首个80后视帝。</p>
<p>台下坐着无数前辈，更让人为难的是，私下最好的朋友，也是竞争对手的大哥靳东，也在台下坐着，主持人主动挑起话题：</p>
<p>拿到视帝的胡歌想对靳东说点什么呢？</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/hg25.webp.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>胡歌的回应就很棒：</p>
<blockquote>
<p>在戏里我们是家人，戏外我们也是家人，这个奖项不管谁拿都是咱家的。我刚和敏涛姐说，不管是谁拿了奖，这个奖都是挂在咱们家的墙上。</p>
</blockquote>
<p><img src="http://olg3gwtbm.bkt.clouddn.com/hg26.webp.jpg" alt=""></p>
<p>没有人会好运一辈子，也许生命中那些独自隐忍的时刻，就是让一个人更接近自己的机会。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/hg27.webp.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>胡歌在阅读里得到新生、填补灵魂，给了我们对于“阅读的意义”最好诠释：</p>
<p>阅读是为了让我们更好的认识自己，成为更好的自己。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://olg3gwtbm.bkt.clouddn.com/hg28.webp.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
</the></excerpt>]]></content>
      
        <categories>
            
            <category> 美文 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 美文 </tag>
            
            <tag> 杂记 </tag>
            
            <tag> 转载 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用Hexo+github建设个人博客教程]]></title>
      <url>http://mutouspace.cn/2017/02/18/%E4%BD%BF%E7%94%A8Hexo-github%E5%BB%BA%E8%AE%BE%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""></excerpt></p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>博主本来打算在Coding上搭建自己的Ghost博客，由于以前没有搭建博客的经验，就在网上百度教程，但很遗憾，教程很少，写的也比较简单，最终在别人的推荐下，选择了Hexo搭建静态博客。</p>
<p><strong>教程思路：</strong></p>
<ol>
<li>列出博客搭建环境+所需工具；</li>
<li>环境的配置与工具的安装简述，以及简单的使用教程，安装Git、Node.js环境以及Hexo框架；</li>
<li>创建Hexo项目，并本地运行查看效果</li>
<li>修改项目配置文件（根目录下的_config.yml文件）</li>
<li>安装Hexo框架主题（推荐：Next或yelee主题，本人用的yelee），对主题进行配置，主要是修改theme目录下的_config.yml文件</li>
<li>将本地设置好的Hexo项目发布到Github Pages上（包括绑定自己的域名）（这里会介绍如何写文章）</li>
<li>总结</li>
</ol>
<a id="more"></a> 
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>在搭建博客时，你需要做以下准备：</p>
<ol>
<li>确定自己的系统为Windows;(因为博主用的系统是Windows10，为了避免浪费您的时间，如果不是Windows系统就不要看了。)</li>
<li>Git下载，node.js下载。</li>
</ol>
<p>本文所使用的环境：</p>
<ul>
<li>Windows 10</li>
<li>Git  version 2.11.1.windows.1</li>
<li>node.js v6.9.5 LTS</li>
<li>hexo </li>
</ul>
<h1 id="开始搭建博客"><a href="#开始搭建博客" class="headerlink" title="开始搭建博客"></a>开始搭建博客</h1><h2 id="Git下载安装及简单实用"><a href="#Git下载安装及简单实用" class="headerlink" title="Git下载安装及简单实用"></a>Git下载安装及简单实用</h2><p>为什么要在电脑上安装Git呢？我相信大多计算机专业的同学对Git的应该不陌生了，Git可以说是现如今最好用的、最先进的分布式版本控制系统（没有之一）。Git在接下来的环境部署及部署博客到github Pages时都是需要的。大家如果有兴趣可以阅读我的博客（<a href="http://blog.csdn.net/tianqingdezhuanlan/article/details/51791318" target="_blank" rel="external">Git的简单使用</a>），对Git进行简单的了解。如果了解Git也没有关系，只要你按照教程一步一步来也可以。</p>
<p><strong>下载Git</strong></p>
<p>我们可以在<a href="https://git-scm.com/downloads" target="_blank" rel="external">Git的官网</a>下载我们所需要的git，我选择的是最新版的Git Windows X64 版本。</p>
<p><strong>安装Git</strong></p>
<p>Git的安装也很简单，就像安装我们平时所需要的软件一样，教程参考：<a href="http://blog.csdn.net/tianqingdezhuanlan/article/details/51791368" target="_blank" rel="external">Git的安装</a>。</p>
<p><strong>Git的简单实用</strong></p>
<p>初始化一个Git仓库，使用<code>git init</code>命令。</p>
<p>添加文件到Git仓库，分两步：</p>
<p>第一步，使用命令<code>git add &lt;file&gt;</code>，注意，可反复多次使用，添加多个文件；</p>
<p>第二步，使用命令<code>git commit</code>，完成。</p>
<p>我们在这里不太需要git的命令操作，一般只需要git的的shell窗口进行一些操作。</p>
<h2 id="node-js的下载安装"><a href="#node-js的下载安装" class="headerlink" title="node.js的下载安装"></a>node.js的下载安装</h2><p><strong>下载</strong></p>
<p>打开 <a href="https://nodejs.org/en/" target="_blank" rel="external">Nodejs</a> 下载页面，选择合适你当前系统版本的安装包（建议使用 LTS 版本的）。</p>
<p><strong>安装</strong></p>
<p>双击安装文件 -&gt; 下一步 -&gt; 下一步…</p>
<p>【具体操作请参考网上的一篇文章：<a href="http://www.jianshu.com/p/03a76b2e7e00" target="_blank" rel="external">Node.js安装及环境配置之Windows篇</a>】</p>
<h2 id="Hexo框架的安装"><a href="#Hexo框架的安装" class="headerlink" title="Hexo框架的安装"></a>Hexo框架的安装</h2><p>首先我们可以看一下<a href="https://hexo.io/" target="_blank" rel="external">hexo</a>的官网，了解一下hexo。</p>
<p><strong>Windows中的安装</strong></p>
<ol>
<li><p>打开命令行</p>
<p>Win+R或者点击开始按钮–&gt;运行–&gt;输入“cmd”;</p>
<p>用 <strong>Git Bash</strong></p>
</li>
<li><p>输入命令</p>
<p><code>npm install hexo-cli -g</code></p>
</li>
</ol>
<p>输入完命令后就开始了hexo的安装，这里可能需要等待一段时间，时间不确定，只要不报错就可以了。</p>
<h2 id="创建Hexo本地博客"><a href="#创建Hexo本地博客" class="headerlink" title="创建Hexo本地博客"></a>创建Hexo本地博客</h2><p> 接下来我们在一个本地盘自定义路径中创建一个文件夹作为我的项目文件，我在这里选择了在G盘下新建了一个名为TerryBlog的文件夹，作为我的项目文件，路径为【G:\TerryBlog】.在G盘下，点击鼠标右键–&gt;Git Bash，打开命令输入框。输入命令如下：</p>
<p>   <code>hexo init TerryBlog        //hexo init +你的项目名称，如我的为TerryBlog</code></p>
<p> 执行完上述命令后，我们就创建了TerryBlog文件夹，进入刚创建的TerryBlog项目目录，命令操作如下：</p>
<p>  <code>cd TerryBlog      //进入TerryBlog目录</code></p>
<p> 或者直接在TerryBlog文件夹下，再点击鼠标右键–&gt;Git Bash，打开命令输入框。再输入以下命令：</p>
<p>  <code>npm install</code></p>
<p> 安装完成之后，【G:\TerryBlog】目录结构是这样的：</p>
<p>   <img src="http://olg3gwtbm.bkt.clouddn.com/hexo1.jpg" alt=""></p>
<p>  到此为止，一个博客就已经搭建好了，现在我们启动 hexo 本地服务，看下默认的博客是怎样的，命令如下：</p>
<p>  <code>hexo s</code></p>
<p>   <img src="http://olg3gwtbm.bkt.clouddn.com/hexos.png" alt=""></p>
<p>   <strong><em>在浏览器中输入：<a href="http://localhost:4000/进行访问，效果图如下：" target="_blank" rel="external">http://localhost:4000/进行访问，效果图如下：</a></em></strong></p>
<p>   <img src="http://olg3gwtbm.bkt.clouddn.com/hexo4040.png" alt=""></p>
<pre><code>** 如果要停止 hexo 服务：在 Git Bash 下按 Ctrl + C即可**
</code></pre><p>   到这里我们简单的hexo博客基本就完成一部分了！是不是很开心，如果不进行主题美化的话，我们马上就可以有一个自己的博客了。</p>
<h1 id="修改项目配置文件"><a href="#修改项目配置文件" class="headerlink" title="修改项目配置文件"></a>修改项目配置文件</h1><p>  在这里我们修改的是【G:\TerryBlog】路径下的 <code>_config.yml</code> <strong>站点主题配置</strong>文件，我的配置如下：</p>
<p>  <strong>注意：修改之前最好备份一下。</strong></p>
<pre><code># Hexo Configuration
## Docs: https://hexo.io/docs/configuration.html
## Source: https://github.com/hexojs/hexo/

# Site 这一块区域主要是设置博客的主要说明，需要注意的是：每个冒号后面都是有一个空格，然后再书写自己的内容的


title: Terry_Tian Code #网站标题
subtitle: 行是知之始   知是行之成  #网站副标题
description: 在山的这边，海的那边，有一只程序猿。。。  #描述
author: Terry Tian   #博主名字
avatar: http://olg3gwtbm.bkt.clouddn.com/head.jpg  #博主头像
email: 1015236187@qq.com   #邮箱
language: zh-Hans  #语言
timezone:   #网站时区。Hexo默认使用电脑时区

# URL,这一块一般可以设置的是 url 这个参数，比如我要设置绑定域名的，这里就需要填写我的域名信息
## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;
url: http://mutouspace.cn/
root: /
permalink: :year/:month/:day/:title/
permalink_defaults:

 # Directory
source_dir: source
public_dir: public
tag_dir: tags
archive_dir: archives
category_dir: categories
code_dir: downloads/code
i18n_dir: :lang
skip_render:

# Writing
new_post_name: :title.md # File name of new posts
default_layout: post
titlecase: false # Transform title into titlecase
external_link: true # Open external links in new tab
filename_case: 0
render_drafts: false
post_asset_folder: false
relative_link: false
future: true
highlight:
  enable: true
  line_number: true
  auto_detect: false
  tab_replace:

# Category &amp; Tag
default_category: uncategorized
category_map:
tag_map:

# Date / Time format
## Hexo uses Moment.js to parse and display date
## You can customize the date format as defined in
## http://momentjs.com/docs/#/displaying/format/
 date_format: YYYY-MM-DD
 time_format: HH:mm:ss

 # Pagination
 ## Set per_page to 0 to disable pagination
 per_page: 10
 pagination_dir: page

 # Extensions
 ## Plugins: https://hexo.io/plugins/
 ## Themes: https://hexo.io/themes/
 theme: yelee

 # Deployment
 ## Docs: https://hexo.io/docs/deployment.html
 deploy:
   type: git
   repo: git@github.com:MuTouTQ/MuTouTQ.github.io.git
   branch: master

 search:
   path: search.xml
   field: post
</code></pre><p>   做完这一些之后再在Git Bash 命令框中，输入 <code>hexo s</code> 重新启动服务，在浏览器中输入：<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a>进行访问,查看一下效果。</p>
<h1 id="安装Hexo框架主题"><a href="#安装Hexo框架主题" class="headerlink" title="安装Hexo框架主题"></a>安装Hexo框架主题</h1><p>  在上一步完成后，你会发现虽然改了一部分配置，但页面还是很吃藕，接下来，咱们就要给咱们的博客美美容了。hexo的主题有很多，大家可以去这里选一下，hexo-theme：<a href="https://hexo.io/themes/" target="_blank" rel="external">https://hexo.io/themes/</a>.</p>
<p>  我选择的是yelee主题：<a href="https://github.com/MOxFIVE/hexo-theme-yelee" target="_blank" rel="external">yelee</a></p>
<p>  还是让 Git Bash 保持在【G:\TerryBlog】目录下，然后输入命令：</p>
<p>  <code>git clone https://github.com/MOxFIVE/hexo-theme-yelee.git themes/yelee</code></p>
<p>  这样就在 【G:\TerryBlog\themes】目录下生成了一个 yelee 文件夹，里面有我们刚刚 clone 下来的主题内容。</p>
<p>  我们现在要修改【G:\TerryBlog】目录下的项目配置文件：_config.yml，把对应的主题目录名改下，主要是将配置中的 theme: yelee修改。</p>
<p>  <strong>注意：该配置文件中的键值之间一定要有空格，否则轻则没有作用，重则报错，无法启动。</strong></p>
<p>  更改主题目录名后，我们还要重新生成主题静态内容，继续在 Git Bash 中输入命令输入如下命令：</p>
<p>   <code>hexo g      //重新生成静态博客的所有内容</code></p>
<p>   <code>hexo s        //重启 hexo 本地服务</code></p>
<p>  重新访问：<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a>，看一下效果.</p>
<h2 id="修改Hexo框架主题"><a href="#修改Hexo框架主题" class="headerlink" title="修改Hexo框架主题"></a>修改Hexo框架主题</h2><p>  上一步完成后，看到的是yelee的默认主题，这里我们可以再次配置一下，修改的是【G:\TerryBlog\themes\yelee】路径下的 <code>_config.yml</code>文件。这里我们可以跟着<a href="http://moxfive.coding.me/yelee/" target="_blank" rel="external">Yelee 主题使用说明</a>来修改。</p>
<h1 id="发布到Github-Pages上"><a href="#发布到Github-Pages上" class="headerlink" title="发布到Github Pages上"></a>发布到Github Pages上</h1><h2 id="创建Github-Pages并SSH授权"><a href="#创建Github-Pages并SSH授权" class="headerlink" title="创建Github Pages并SSH授权"></a>创建Github Pages并SSH授权</h2><p>  现在假设你已经有一个 Gtihub 账号，你还需要一个<strong>特别</strong>的仓库，特别在仓库名就是你的 Github 账号登录名，比如我的用户名是：MuouTQ，那我要创建的仓库名字完整滴填写是：MuouTQ.github.io，具体效果如下图：</p>
<p>  <img src="http://olg3gwtbm.bkt.clouddn.com/github1.png" alt=""></p>
<p>  仔细的人可能看到，你的仓库名根本不和你的用户名一样，由于我之前已经创建了一个这样特别的仓库，再创建一个就会提示错误，为了演示方便，所以删了一个T。</p>
<p>  创建好仓库之后，要本地生成 SSH 秘钥，方便电脑上的 git 软件好提交内容到 Github 上。</p>
<p>  【具体可以参考网上的一篇文章：<a href="http://www.jianshu.com/p/a3b4f61d4747" target="_blank" rel="external">Git安装及SSH Key管理之Windows篇</a>】</p>
<p>  现在用记事本打开公钥，复制文件中的所有内容。访问：<a href="https://github.com/settings/ssh" target="_blank" rel="external">https://github.com/settings/ssh</a>，</p>
<p>  Title：自己随便取</p>
<p>  Key：把刚刚复制的都粘贴进来</p>
<h2 id="把本地的博客内容同步到-Github-上"><a href="#把本地的博客内容同步到-Github-上" class="headerlink" title="把本地的博客内容同步到 Github 上"></a>把本地的博客内容同步到 Github 上</h2><p>   要把本地的静态博客同步到 Github，我们还需要先安装两个跟部署相关的 hexo 插件：</p>
<p>   <code>cd G:\TerryBlog              //进入TerryBlog项目目录</code></p>
<pre><code>上一步，我们可以到 G:\TerryBlog 路径下 Git Bash 一下；
</code></pre><p>  <code>npm/cnpm install hexo-server --save         //创建</code></p>
<p> <code>npm/cnpm install hexo-deployer-git --save    //安装自动部署发布工具</code></p>
<p>  编辑TerryBlog的<strong>项目配置文件</strong>：_config.yml</p>
<p>  官网对此配置的介绍：<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="external">https://hexo.io/zh-cn/docs/configuration.html</a></p>
<p>  主要改这里（一般在最后面）：</p>
<pre><code> # Deployment
## 这里是重点，这里是修改发布地址，因为我们前面已经加了 SSH 密钥信息在 Github 设置里面了，所以只要我们电脑里面持有那两个密钥文件就可以无需密码地跟 Github 做同步。
## 需要注意的是这里的 repo 采用的是 ssh 的地址，而不是 https 的。分支我们默认采用 master 分支，以后你翅膀硬了要换其他也无所谓。
## Docs: https://hexo.io/docs/deployment.html
  deploy:
  type: git
  repo: git@github.com:MuTouTQ/MuTouTQ.github.io.git
  branch: master
</code></pre><p>  编辑完项目配置文件后我们需要重新部署：</p>
<pre><code>cd G:\TerryBlog              //进入TerryBlog项目目录

上一步，我们可以到 G:\TerryBlog 路径下 Git Bash 一下；
hexo clean//先清除掉已经生成的旧文件
hexo g //再生成一次静态文件
hexo s   //在本地预览下
hexo d   //本地没问题之后，Ctrl + C 停掉本地预览，使用部署命令部署到 Github 上
</code></pre><p>   <img src="http://olg3gwtbm.bkt.clouddn.com/github2.png" alt=""></p>
<p>   访问服务器地址进行检查：<a href="http://MuTouTQ.github.io/，该访问地址是之前在github上的创建的仓库名称，输入你的github用户名" target="_blank" rel="external">http://MuTouTQ.github.io/，该访问地址是之前在github上的创建的仓库名称，输入你的github用户名</a> + .github.io</p>
<h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><ul>
<li><p><strong>创建CNAME文件</strong></p>
<p>我们要一个 CNAME 文件（文件名叫 CNAME，文件没有后缀，里面的内容为你购买的域名，不要以http以及www等前缀，只需域名本身即可，如：mutouspace.cn。这个CNAME可以你先建一个txt文件，把后缀名去掉），把该文件放在 G:\TerryBlog 目录下。</p>
</li>
<li><p><strong>获取Github的ip地址</strong></p>
<p>实际获取的是你github上博客项目的ip（即：MuTouTQ.github.io），打开命令窗口，输入【ping MuTouTQ.github.io】来查看ip地址，并记录下来</p>
</li>
<li><p><strong>添加DNS Service记录</strong></p>
<p>我的域名是腾讯云上买的，用的腾讯云的域名解析，将ip地址和你买的域名绑定就好了，域名解析后需要等待几分钟才能被访问</p>
<p><img src="http://olg3gwtbm.bkt.clouddn.com/yuming.png" alt=""></p>
<p><strong>补充：</strong></p>
<p>如果你做完域名解析后，还是没法用你的域名访问，可以这项修改下：</p>
<p>打开你的Git Hub下的MuTouTQ.github.io仓库，找到Settings，点进去</p>
<p><img src="http://olg3gwtbm.bkt.clouddn.com/gitset.png" alt=""></p>
<p>点进去后，找到这里，填入你的域名：mutouspace.cn   点击：SAVE  等一会就可以访问了。</p>
<p><img src="http://olg3gwtbm.bkt.clouddn.com/gp.png" alt=""></p>
<p>到此为止，我们的博客就成功配置完了！</p>
</li>
</ul>
<h1 id="发表一篇文章"><a href="#发表一篇文章" class="headerlink" title="发表一篇文章"></a>发表一篇文章</h1><ol>
<li>在G:\TerryBlog 路径下Git Bash执行命令： <code>hexo new &quot;my new post&quot;</code></li>
<li><p>在G:\TerryBlog\source_post中打开my-new-post.md，打开方式使用记事本或notepad++（推荐：MarkdownPad）。</p>
<p>hexo中写文章使用的是Markdown，没接触过的可以看下Markdown语法说明.</p>
<p>   title: my new post #可以改成中文的，如“新文章”<br>   date: 2015-04-08 22:56:29 #发表日期，一般不改动<br>   categories: blog #文章文类<br>   tags: [博客，文章] #文章标签，多于一项时用这种格式，只有一项时使用tags: blog</p>
<p>   #这里是正文，用markdown写，你可以选择写一段显示在首页的简介后，加上</p>
   <!--more-->
<p>   #在<!--more-->之前的内容会显示在首页，之后的内容会被隐藏，当游客点击Read more才能看到。</p>
</li>
<li><p>写完文章后，你可以使用1. hexo g生成静态文件。2. hexo s在本地预览效果。3.hexo d同步到github，然后使用<a href="mutouspace.cn">mutouspace.cn</a>进行访问。</p>
</li>
</ol>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="常用hexo命令"><a href="#常用hexo命令" class="headerlink" title="常用hexo命令"></a>常用hexo命令</h2><p>常见命令</p>
<pre><code>hexo new &quot;postName&quot; #新建文章
hexo new page &quot;pageName&quot; #新建页面
hexo generate #生成静态页面至public目录
hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）
hexo deploy #部署到GitHub
hexo help  # 查看帮助
hexo version  #查看Hexo的版本
</code></pre><p>缩写：</p>
<pre><code>hexo n == hexo new
hexo g == hexo generate
hexo s == hexo server
hexo d == hexo deploy
</code></pre><p>组合命令：</p>
<pre><code>hexo s -g #生成并本地预览
hexo d -g #生成并上传
</code></pre><h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p>  可以访问我的git博客来查看效果： mutouspace.cn</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>   <a href="http://www.jianshu.com/p/0a3cad3e8cdf" target="_blank" rel="external">基于Hexo+Github Pages的博客搭建</a></p>
<p>   <a href="http://opiece.me/2015/04/09/hexo-guide/" target="_blank" rel="external">使用Hexo搭建个人博客(基于hexo3.0)</a></p>
<p>   <a href="http://blog.liuxianan.com/build-blog-website-by-hexo-github.html#qian-yan" target="_blank" rel="external">使用hexo+github搭建免费个人博客详细教程</a></p>
]]></content>
      
        <categories>
            
            <category> Hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Git </tag>
            
            <tag> node </tag>
            
            <tag> github </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[测试二]]></title>
      <url>http://mutouspace.cn/2017/02/17/%E6%B5%8B%E8%AF%95%E4%BA%8C/</url>
      <content type="html"><![CDATA[<div class="github-widget" data-repo="MuTouTQ/MuTouTQ.github.io"></div>

<!-- e.g. -->
<div class="github-widget" data-repo="MOxFIVE/hexo-theme-yelee"></div>]]></content>
      
        
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://mutouspace.cn/2017/02/17/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[测试一]]></title>
      <url>http://mutouspace.cn/2017/02/17/%E6%B5%8B%E8%AF%95%E4%B8%80/</url>
      <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""></excerpt></p>
<p>#这里是正文，用markdown写，你可以选择写一段显示在首页的简介后，加上</p>
<a id="more"></a> 
<p><the rest="" of="" contents="" |="" 余下全文=""></the></p>
<p>#在<!--more-->之前的内容会显示在首页，之后的内容会被隐藏，当游客点击Read more才能看到。</p>
]]></content>
      
        <categories>
            
            <category> 测试 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
